<Expectations>
	<!-- Assembly -->
	<Expected checkID = "D1004" typeName = "UseStrongName" fullName = "evildoer"/>
	<Expected checkID = "R1014" typeName = "StaticSetter" fullName = "evildoer"/>
	<Expected checkID = "D1018" typeName = "CLSCompliant" fullName = "evildoer"/>
	<Expected checkID = "C1020" typeName = "AttributeSpelling" fullName = "evildoer"/>
	<Expected checkID = "D1000" typeName = "LargeNamespace" fullName = "evildoer"/>
	<Expected checkID = "D1039" typeName = "BadExit" fullName = "evildoer"/>

	<!-- BadClass -->
	<Expected checkID = "PO1000" typeName = "NewLineLiteral" fullName = "System.Void EvilDoer.BadClass::UnixNewLine()"/>
	<Expected checkID = "PO1000" typeName = "NewLineLiteral" fullName = "System.Void EvilDoer.BadClass::WindowsNewLine()"/>
	<Expected checkID = "PO1000" typeName = "NewLineLiteral" fullName = "System.Void EvilDoer.BadClass::MacNewLine()"/>

	<Expected checkID = "D1002" typeName = "MethodTooComplex" fullName = "System.Void EvilDoer.BadClass::Complex(System.Int32,System.Int32)"/>

	<Expected checkID = "D1066" typeName = "Finalizable" fullName = "System.Void EvilDoer.BadClass::Finalize()"/>
	<Expected checkID = "P1002" typeName = "UseStringEmpty" fullName = "System.Void EvilDoer.BadClass::WriteBlankLine()"/>
	<Expected checkID = "P1003" typeName = "AvoidBoxing" fullName = "System.Void EvilDoer.BadClass::Boxing(System.Int32)"/>
	<Expected checkID = "P1004" typeName = "AvoidUnboxing" fullName = "System.Void EvilDoer.BadClass::Unboxing(System.Object)"/>
	<Expected checkID = "P1005" typeName = "StringConcat" fullName = "System.Void EvilDoer.BadClass::Loop(System.String,System.String,System.Int32)"/>
	<Expected checkID = "P1007" typeName = "NonGenericCollections" fullName = "EvilDoer.BadClass"/>

	<Expected checkID = "R1000" typeName = "DisposableFields" fullName = "EvilDoer.BadClass"/>
	<Expected checkID = "R1004" typeName = "DisposeScopedObjects" fullName = "System.Int32 EvilDoer.BadClass::ReadAll1(System.String,System.Int32)"/>

	<Expected checkID = "C1001" typeName = "InfiniteRecursion" fullName = "System.Int32 EvilDoer.BadClass::GetHashCode()"/>
	<Expected checkID = "MS1020" typeName = "EqualsRequiresNullCheck1" fullName = "System.Boolean EvilDoer.BadClass::Equals(EvilDoer.BadClass)"/>
	<Expected checkID = "MS1020" typeName = "EqualsRequiresNullCheck1" fullName = "System.Boolean EvilDoer.BadClass::op_Equality(EvilDoer.BadClass,EvilDoer.BadClass)"/>
	<Expected checkID = "MS1020" typeName = "EqualsRequiresNullCheck1" fullName = "System.Boolean EvilDoer.BadClass::Equals(System.Object)"/>
	<Expected checkID = "MS1004" typeName = "EqualsRequiresNullCheck1" fullName = "System.Boolean EvilDoer.BadClass::Equals(System.Object)"/>
	<Expected checkID = "MS1003" typeName = "DontDestroyStackTrace" fullName = "System.Void EvilDoer.BadClass::TrashStackTrace()"/>
	<Expected checkID = "C1002" typeName = "MalformedFormatString" fullName = "System.String EvilDoer.BadClass::SkippedFormat(System.Int32,System.Int32)"/>
	<Expected checkID = "C1000" typeName = "StringSpelling" fullName = "System.Void EvilDoer.BadClass::Unboxing(System.Object)"/>
	<Expected checkID = "MS1012" typeName = "ThrowDerived" fullName = "System.Void EvilDoer.BadClass::Loop(System.String,System.String,System.Int32)"/>
	<Expected checkID = "MS1011" typeName = "DontSwallowException" fullName = "System.Void EvilDoer.BadClass::Swallows()"/>
	<Expected checkID = "S1007" typeName = "UnmanagedCodeSecurity" fullName = "EvilDoer.BadClass"/>

	<!-- BadClass/Nested -->
	<Expected checkID = "PO1000" typeName = "NewLineLiteral" fullName = "System.Void EvilDoer.BadClass/Nested::BadLiteral()"/>
	<Expected checkID = "D1001" typeName = "ClassCanBeMadeStatic" fullName = "EvilDoer.BadClass/Nested"/>
	<Expected checkID = "D1001" typeName = "ClassCanBeMadeStatic" fullName = "EvilDoer.BadClass2/Inner"/>

	<!-- BadClass2 -->
	<Expected checkID = "MS1018" typeName = "VisibleFields" fullName = "EvilDoer.BadClass2"/>
	<Expected checkID = "R1005" typeName = "CtorCallsVirtual" fullName = "System.Void EvilDoer.BadClass2::.ctor(System.String)"/>
	<Expected checkID = "R1001" typeName = "DisposeNativeResources" fullName = "EvilDoer.BadClass2"/>
	<Expected checkID = "MS1008" typeName = "LockThis" fullName = "System.Void EvilDoer.BadClass2::Work()"/>
	<Expected checkID = "MS1015" typeName = "SynchronizedAttribute" fullName = "System.Void EvilDoer.BadClass2::Work2()"/>
	<Expected checkID = "R1009" typeName = "CompareFloats" fullName = "System.Boolean EvilDoer.BadClass2::BadArith(System.Double,System.Double)"/>
	<Expected checkID = "R1011" typeName = "HashMatchesEquals" fullName = "EvilDoer.BadClass2"/>
	<Expected checkID = "R1012" typeName = "ObjectHashCode1" fullName = "EvilDoer.BadClass2"/>
	<Expected checkID = "MS1020" typeName = "EqualsRequiresNullCheck" fullName = "System.Boolean EvilDoer.BadClass2::Equals(System.Object)"/>
	<Expected checkID = "MS1020" typeName = "EqualsRequiresNullCheck" fullName = "System.Boolean EvilDoer.BadClass2::op_Equality(EvilDoer.BadClass2,EvilDoer.BadClass2)"/>
	<Expected checkID = "C1002" typeName = "MalformedFormatString" fullName = "System.String EvilDoer.BadClass2::get_StringProp()"/>
	<Expected checkID = "MS1006" typeName = "ICloneable" fullName = "EvilDoer.BadClass2"/>
	<Expected checkID = "MS1010" typeName = "ReservedExceptions" fullName = "System.Void EvilDoer.BadClass2::Reserved(System.Object)"/>
	<Expected checkID = "P1010" typeName = "ToStringOnString" fullName = "System.String EvilDoer.BadClass2::SillyString(System.String)"/>
	<Expected checkID = "R1013" typeName = "WeakIdentityLock" fullName = "System.Void EvilDoer.BadClass2::StringLock(System.Int32)"/>
	<Expected checkID = "PO1001" typeName = "DllImportPath" fullName = "System.Void EvilDoer.BadClass2::BadExtern()"/>
	<Expected checkID = "PO1002" typeName = "DllImportExtension" fullName = "System.Void EvilDoer.BadClass2::BadExtern()"/>
	<Expected checkID = "D1007" typeName = "UseBaseTypes" fullName = "System.String EvilDoer.BadClass2::SillyString(System.String)"/>
	<Expected checkID = "D1020" typeName = "NativeMethods" fullName = "System.Void EvilDoer.BadClass2::BadExtern()"/>
	<Expected checkID = "D1020" typeName = "NativeMethods" fullName = "System.IntPtr EvilDoer.BadClass2::CreateHandle()"/>
	<Expected checkID = "D1038" typeName = "DontExit2" fullName = "System.Void EvilDoer.BadClass2::Exit()"/>
	<Expected checkID = "C1022" typeName = "UseSetterValue" fullName = "System.Void EvilDoer.BadClass2::set_Item(System.Int32,System.Object)"/>

	<!-- BadDisposable -->
	<Expected checkID = "D1062" typeName = "Disposeable" fullName = "EvilDoer.BadDisposable"/>
	<Expected checkID = "S1003" typeName = "S1003" fullName = "EvilDoer.BadDisposable"/>
	<Expected checkID = "C1018" typeName = "IgnoredReturn" fullName = "System.Void EvilDoer.BadDisposable::DoDispose(System.Boolean)"/>
	<Expected checkID = "C1021" typeName = "RecursiveEquality" fullName = "System.Boolean EvilDoer.BadDisposable::op_Equality(EvilDoer.BadDisposable,EvilDoer.BadDisposable)"/>

	<!-- BadDisposable2 -->
	<Expected checkID = "PO1005" typeName = "BoolMarshalling" fullName = "System.Boolean EvilDoer.BadDisposable2/NativeMethods::CloseHandle(System.IntPtr)"/>

	<!-- BadNaming -->
	<Expected checkID = "MO1000" typeName = "UseMonoNaming" fullName = "EvilDoer.BadNaming"/>
	<Expected checkID = "D1001" typeName = "ClassCanBeMadeStatic" fullName = "EvilDoer.BadNaming"/>
	<Expected checkID = "P1012" typeName = "NotInstantiated" fullName = "evildoer"/>
	<Expected checkID = "D1032" typeName = "UnusedMethod" fullName = "evildoer"/>

	<!-- BadStruct -->
	<Expected checkID = "MS1019" typeName = "LargeStruct" fullName = "EvilDoer.BadStruct"/>
	<Expected checkID = "R1011" typeName = "HashMatchesEquals" fullName = "EvilDoer.BadStruct"/>
	<Expected checkID = "D1036" typeName = "EqualityOperator" fullName = "EvilDoer.BadStruct"/>
	<Expected checkID = "P1009" typeName = "ValueHashCode" fullName = "System.Int32 EvilDoer.BadStruct::GetHashCode()"/>
	<Expected checkID = "MS1005" typeName = "EqualsCannotCast2" fullName = "System.Boolean EvilDoer.BadStruct::Equals(System.Object)"/>

	<!-- BadStruct2 -->
	<Expected checkID = "P1008" typeName = "StructOverrides" fullName = "EvilDoer.BadStruct2"/>

	<!-- BadException -->
	<Expected checkID = "MS1002" typeName = "CustomException" fullName = "EvilDoer.BadException"/>
	<Expected checkID = "D1015" typeName = "ExceptionConstructors" fullName = "EvilDoer.BadException"/>
	<Expected checkID = "D1024" typeName = "SerializeException" fullName = "EvilDoer.BadException"/>
	<Expected checkID = "D1025" typeName = "SerializeExceptionMembers" fullName = "EvilDoer.BadException"/>

	<!-- GlobalClass -->
	<Expected checkID = "MS1016" typeName = "GlobalPublicType" fullName = "GlobalClass"/>

	<!-- Enums -->
	<Expected checkID = "MS1014" typeName = "EnumsNeedZero" fullName = "EvilDoer.BadEnum1"/>
	<Expected checkID = "MS1021" typeName = "PluralEnumFlags" fullName = "EvilDoer.BadFlag"/>
	<Expected checkID = "MS1022" typeName = "FlagsUseNone" fullName = "EvilDoer.BadFlags"/>

	<!-- Attributes -->
	<Expected checkID = "MS1001" typeName = "AttributesNeedUsage" fullName = "EvilDoer.BadAttribute"/>
	<Expected checkID = "P1013" typeName = "UnsealedAttribute" fullName = "EvilDoer.BadAttribute"/>

	<Expected checkID = "D1022" typeName = "ObsoleteMessage" fullName = "System.String EvilDoer.BadNames::get_Name()"/>
	<Expected checkID = "D1009" typeName = "AttributeProperties" fullName = "EvilDoer.Bad5Attribute"/>
	<Expected checkID = "MS1001" typeName = "AttributesNeedUsage" fullName = "EvilDoer.Bad5Attribute"/>
	<Expected checkID = "MS1025" typeName = "SuffixName3" fullName = "EvilDoer.BadFlags"/>
	<Expected checkID = "MS1027" typeName = "PreferredTerm" fullName = "EvilDoer.HandleLogIn"/>

	<Expected checkID = "D1006" typeName = "ImplementGenericCollection" fullName = "EvilDoer.EmptyCollection"/>
	<Expected checkID = "D1016" typeName = "TypedList" fullName = "EvilDoer.EmptyCollection"/>
	<Expected checkID = "D1017" typeName = "TypedDictionary" fullName = "EvilDoer.EmptyDictionary"/>

	<Expected checkID = "D1041" typeName = "CircularReference" fullName = "EvilDoer.Base1"/>
	<Expected checkID = "D1041" typeName = "CircularReference" fullName = "EvilDoer.Cyclic1"/>

	<Expected checkID = "D1042" typeName = "IdenticalMethods" fullName = "System.Void EvilDoer.Identical2::MyBad(System.String)"/>

	<Expected checkID = "C1017" typeName = "NullField" fullName = "EvilDoer.BadClass"/>
	<Expected checkID = "D1045" typeName = "GodClass" fullName = "EvilDoer.BadClass2"/>

	<Expected checkID = "D1046" typeName = "SchizoidTyp" fullName = "EvilDoer.HalfCohesive"/>

	<Expected checkID = "D1049" typeName = "IdenticalCodeBlocks" fullName = "System.Void EvilDoer.BadClass::Complex(System.Int32,System.Int32)"/>
	<Expected checkID = "D1049" typeName = "IdenticalCodeBlocks" fullName = "System.Void EvilDoer.Branch::Alpha(System.Int32,System.Int32)"/>
	<Expected checkID = "D1049" typeName = "IdenticalCodeBlocks" fullName = "System.Void EvilDoer.ReverseBranch::Alpha(System.Int32,System.Int32)"/>
	<Expected checkID = "D1049" typeName = "IdenticalCodeBlocks" fullName = "System.Void EvilDoer.ExceptionHandlers::Alpha(System.Int32,System.Int32)"/>
	<Expected checkID = "D1049" typeName = "IdenticalCodeBlocks" fullName = "System.Void EvilDoer.SameMethod::Gamma(System.Int32,System.Int32)"/>

	<Expected checkID = "MS1029" typeName = "ClassPrefix" fullName = "evildoer"/>
	<Expected checkID = "MS1030" typeName = "MS1030" fullName = "Hungarian.Bad4"/>
	<Expected checkID = "MS1030" typeName = "MS1030" fullName = "Hungarian.Bad3"/>
	<Expected checkID = "MS1030" typeName = "MS1030" fullName = "Hungarian.Bad2"/>
	<Expected checkID = "MS1030" typeName = "MS1030" fullName = "Hungarian.Bad1"/>
	<Expected checkID = "PO1009" typeName = "WinFormsVoodoo" fullName = "evildoer"/>
	<Expected checkID = "D1050" typeName = "UnusedField" fullName = "evildoer"/>
	<Expected checkID = "P1008" typeName = "StructOverrides" fullName = "EvilDoer.XWindowAttributes"/>
	<Expected checkID = "D1051" typeName = "PublicImplementation" fullName = "EvilDoer.InternalWorker"/>
	<Expected checkID = "D1051" typeName = "PublicImplementation" fullName = "EvilDoer.InternalWorker3"/>
	<Expected checkID = "C1026" typeName = "NoStaticRemove" fullName = "EvilDoer.BadStatic1"/>
	<Expected checkID = "C1026" typeName = "NoStaticRemove" fullName = "EvilDoer.BadStatic2"/>
	<Expected checkID = "C1026" typeName = "NoStaticRemove" fullName = "EvilDoer.BadStatic3"/>
	<Expected checkID = "P1007" typeName = "NonGenericCollections" fullName = "EvilDoer.BadStatic2"/>
	<Expected checkID = "C1028" typeName = "InconsistentProperty" fullName = "System.Int32 EvilDoer.BadProp1::get_Y()"/>
	<Expected checkID = "D1052" typeName = "PreferMonitor1" fullName = "EvilDoer.GoodManagedDisposable"/>
	<Expected checkID = "M1002" typeName = "InconsistentNamespace" fullName = "Source.EvilDoer.BadNS1"/>
	<Expected checkID = "M1002" typeName = "InconsistentNamespace" fullName = "MiscEvil.BadNS2"/>
	<Expected checkID = "R1030" typeName = "StringUriOverload" fullName = "EvilDoer.BadStringUri1"/>
	<Expected checkID = "R1030" typeName = "StringUriOverload" fullName = "EvilDoer.BadStringUri2"/>
	<Expected checkID = "R1030" typeName = "StringUriOverload" fullName = "EvilDoer.BadStringUri3"/>
	<Expected checkID = "R1034" typeName = "ValidateArgs1" fullName = "System.String EvilDoer.BadClass2::SillyString(System.String)"/>
	<Expected checkID = "R1034" typeName = "ValidateArgs1" fullName = "System.Boolean EvilDoer.BadClass2::Equals(System.Object)"/>
	<Expected checkID = "R1035" typeName = "ValidateArgs2" fullName = "System.Void EvilDoer.Identical2::MyBad2(System.String)"/>
	<Expected checkID = "G1001" typeName = "MessageBoxOptions" fullName = "System.Object EvilDoer.NonLocalized::Bad3(System.String)"/>
	<Expected checkID = "G1002" typeName = "NonLocalizedGui" fullName = "System.Void EvilDoer.NonLocalized::Bad1()"/>
	<Expected checkID = "G1002" typeName = "NonLocalizedGui" fullName = "System.Object EvilDoer.NonLocalized::Bad2(System.String)"/>
	<Expected checkID = "G1002" typeName = "NonLocalizedGui" fullName = "System.Object EvilDoer.NonLocalized::Bad3(System.String)"/>
	<Expected checkID = "G1002" typeName = "NonLocalizedGui" fullName = "System.Object EvilDoer.NonLocalized::Bad4()"/>
	<Expected checkID = "R1036" typeName = "ObjectDisposedException" fullName = "System.Void EvilDoer.BadDisposable2::Work()"/>
	<Expected checkID = "D1007" typeName = "UseBaseTypes" fullName = "System.String EvilDoer.FormatProviderCases::Bad5(EvilDoer.DerivedStringer)"/>
	<Expected checkID = "G1003" typeName = "FormatProvider" fullName = "System.Object EvilDoer.FormatProviderCases::Bad1(System.Object)"/>
	<Expected checkID = "G1003" typeName = "FormatProvider" fullName = "System.Int32 EvilDoer.FormatProviderCases::Bad2(System.String)"/>
	<Expected checkID = "G1003" typeName = "FormatProvider" fullName = "System.String EvilDoer.FormatProviderCases::Bad3(System.Object)"/>
	<Expected checkID = "G1003" typeName = "FormatProvider" fullName = "System.Int32 EvilDoer.FormatProviderCases::Bad4(System.String)"/>
	<Expected checkID = "G1003" typeName = "FormatProvider" fullName = "System.String EvilDoer.FormatProviderCases::Bad5(EvilDoer.DerivedStringer)"/>
	<Expected checkID = "S1020" typeName = "VisiblePInvoke" fullName = "System.Void EvilDoer.BadClass2::BadExtern()"/>
	<Expected checkID = "MO1000" typeName = "UseMonoNaming" fullName = "EvilDoer.InconsistentName1"/>
	<Expected checkID = "MO1000" typeName = "UseMonoNaming" fullName = "EvilDoer.InconsistentName2"/>
	<Expected checkID = "P1020" typeName = "NotSealed" fullName = "EvilDoer.BadNaming"/>
	<Expected checkID = "P1020" typeName = "NotSealed" fullName = "EvilDoer.InconsistentName2"/>
	<Expected checkID = "R1037" typeName = "RecursiveLock1" fullName = "EvilDoer.BadLocker1"/>
	<Expected checkID = "R1037" typeName = "RecursiveLock1" fullName = "EvilDoer.BadLocker2"/>
	<Expected checkID = "R1037" typeName = "RecursiveLock1" fullName = "EvilDoer.BadLocker3"/>
	<Expected checkID = "R1037" typeName = "RecursiveLock1" fullName = "EvilDoer.BadLocker4"/>
	<Expected checkID = "R1038" typeName = "RecursiveLock2" fullName = "EvilDoer.BadHook1"/>
	<Expected checkID = "R1038" typeName = "RecursiveLock2" fullName = "EvilDoer.BadHook2"/>
	<Expected checkID = "R1038" typeName = "RecursiveLock2" fullName = "EvilDoer.BadHook3"/>
	<Expected checkID = "R1001" typeName = "DisposeNativeResources" fullName = "EvilDoer.NativeArray"/>
	<Expected checkID = "R1001" typeName = "DisposeNativeResources" fullName = "EvilDoer.NativeList"/>
	<Expected checkID = "D1058" typeName = "HashUsesXor" fullName = "System.Int32 EvilDoer.BadClass2::GetHashCode()"/>
	<Expected checkID = "D1059" typeName = "IdentifierCasing" fullName = "evildoer"/>
	<Expected checkID = "D1059" typeName = "IdentifierCasing" fullName = "EvilDoer.BadClass2"/>
	<Expected checkID = "D1059" typeName = "IdentifierCasing" fullName = "System.Void EvilDoer.BadClass2::Baz(System.Int32,System.Int32,System.Int32)"/>
	<Expected checkID = "D1060" typeName = "PropertyMatchesAccessor" fullName = "EvilDoer.BadClass2"/>
	<Expected checkID = "P1021" typeName = "TooManyLocals" fullName = "System.Int32 EvilDoer.BadClass2::TooManyLocals(System.Int32)"/>
	<Expected checkID = "P1022" typeName = "PropertyReturnsCollection" fullName = "System.Int32[] EvilDoer.BadClass::get_ArrayProp()"/>
	<Expected checkID = "P1022" typeName = "PropertyReturnsCollection" fullName = "System.Collections.Generic.List`1&lt;System.Int32&gt; EvilDoer.BadClass::get_ListProp()"/>
	<Expected checkID = "C1034" typeName = "InvalidEnumFlags" fullName = "EvilDoer.Bads"/>
	<Expected checkID = "C1035" typeName = "HashButNoEquals" fullName = "EvilDoer.BadClass3"/>
	<Expected checkID = "D1066" typeName = "Finalizable" fullName = "System.Void EvilDoer.Cohesive::Finalize()"/>
	<Expected checkID = "D1066" typeName = "Finalizable" fullName = "System.Void EvilDoer.HandleLogIn::Finalize()"/>
	<Expected checkID = "D1063" typeName = "BaseDisposable" fullName = "EvilDoer.BadDisposable2"/>
	<Expected checkID = "D1063" typeName = "BaseDisposable" fullName = "EvilDoer.BadDisposable"/>
	<Expected checkID = "D1067" typeName = "PreferSafeHandle" fullName = "EvilDoer.BadDisposable"/>
	<Expected checkID = "P1020" typeName = "NotSealed" fullName = "EvilDoer.BadVisibleState"/>
	<Expected checkID = "R1025" typeName = "HashOverflow" fullName = "System.Int32 EvilDoer.BadVisibleState::GetHashCode()"/>
	<Expected checkID = "C1036" typeName = "EqualsMissesState" fullName = "EvilDoer.BadVisibleState"/>
	<Expected checkID = "P1023" typeName = "UseIEquatable" fullName = "EvilDoer.BadVisibleState"/>
	<Expected checkID = "R1039" typeName = "ThreadSafeAttr" fullName = "evildoer"/>
</Expectations>
