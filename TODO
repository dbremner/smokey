.NET Framework Security

nant -nologo -targetframework:mono-2.0 -D:debug=true test

https://home.comcast.net/~jesse98/public/Smokey

https://home.comcast.net/~jesse98/public/Mono.Cecil.dll
https://home.comcast.net/~jesse98/public/smokey-0.4.0.0.tar.gz
https://home.comcast.net/~jesse98/public/System.Xml.dll.txt

mono --debug bin/smokey.exe -set:ignoreList:SysIgnore.txt /Users/jessejones/New_Files/mono-1.9/mcs/class/lib/default/System.Drawing.dll > tmp.txt
mono --debug bin/smokey.exe -set:ignoreList:SysIgnore.txt /Users/jessejones/New_Files/mono-1.9/mcs/class/lib/net_2_1/mscorlib.dll > tmp.txt
mono --debug bin/smokey.exe -set:ignoreList:SysIgnore.txt /Library/Frameworks/Mono.framework/Libraries/mono/2.1/System.Core.dll > tmp.txt
mono --debug bin/smokey.exe -set:ignoreList:SysIgnore.txt /Library/Frameworks/Mono.framework/Libraries/mono/2.1/System.Xml.Core.dll > tmp.txt
mono --debug bin/smokey.exe -set:ignoreList:SysIgnore.txt /Library/Frameworks/Mono.framework/Libraries/mono/2.0/System.Windows.Forms.dll > tmp.txt

mono bin/smokey.exe bin/smokey.exe	
	27.065				1.1
	24.194				1.0
	31.63 seconds		
	2.818 seconds		
	
mono bin/smokey.exe -set:ignoreList:SysIgnore.txt /ex6/lib/mono/gac/System/2.0.0.0__b77a5c561934e089/System.dll > tmp.txt
	87.082 				1.0
	19.159			
	20.247
	32.081
mono bin/smokey.exe -set:ignoreList:SysIgnore.txt /ex6/lib/mono/gac/System/2.0.0.0__b77a5c561934e089/System.dll > tmp.txt
	62.015
					
<http://msdn2.microsoft.com/en-us/library/ee1hzekz(VS.80).aspx>
Essential .NET Volume 1, The Common Language Runtime - Don Box

/Library/Frameworks/Mono.framework/Versions/1.9/lib/mono/gac/gtk-sharp/2.10.0.0__35e10195dab3c99f/gtk-sharp.dll			  

224 rules
199 fxcop
102 gendarme

* Might want SafeHandle example on the wiki.
* Do a checkin.
* Look at Virtual usage...need to check IsFinal as well to be able to override (interface
  implementations do this if the implementation is not declared virtual))
* Class has trivial get/set and an Equals which does not use that field.
* Use tar --exclude \*/.svn --exclude \*/.svn/\*
* Instead of Ignore and Unused just have Unused.Value
* Might want useful links wiki page.
* RedundantPredicate
	- A && A			A (if idempotent)
	- A || A			A
	- A && !A			false
	- A || !A			true
	- !!A
	- require A to be a function call (with same args) for now
	- probably need some support for building expressions
* Equals/op == always returns true or false.
* CompareTo/op </op >/etc always returns 1 or -1: not symetric
* CompareTo/op </op >/etc always returns 0: borderline useless.
* CompareTo returns number outside [-1, 1]?
* Make sure CompareTo is included in the equals/hash cross check.
* | or & is used with an enum which is not decorated with [Flags].
* Field is only used within one method.
* Thread.Abort is evil (unless you're OK with shutting down the app):
	http://www.interact-sw.co.uk/iangblog/2004/11/12/cancellation
* Should be able to specify text files to spell check.
* Can we add a grammar checker? Only if the text includes periods?
* Type is only used by private methods of one type (so the first type can be made private).
* Overrides Equals, but isnt IEquatable.
* UseJurassicNaming complains about static public fields. Also type P1`1
* GetObjectData doesn't add all non-static fields and the field it doesn't add is not 
  marked with: NonSerializedAttribute, OptionalFieldAttribute, XmlIgnoreAttribute, or 
  DefaultValueAttribute
* Mono naming xml is kinda weak. For example, leading underscore on fields.
* GetHashCode snippets on wiki should be a lil better.
* Add more fxcop rules?
* Get rid of ignoreList setting.
* Smoke smokey.
* Smoke a few system assemblies.
* Upgrade to mono 2.0
* Do a release.
  
* Are there any libraries which will help us get file and line numbers with .net?
	http://blogs.msdn.com/jmstall/archive/2005/10/08/symbol-apis.aspx
* Look at ndepend, probably should add a link to it too:
	http://www.NDepend.com
	http://www.ndepend.com/Features.aspx#CQL
	WARN IF Count != 1 IN SELECT TYPES WHERE !IsImmutable AND FullNameIs "MyClassThatShouldbeImmutable"
* Large property?
* Add more fxcop rules.
* Try to get release functest working, probably need to have a debug only section of expected.xml
* Looks like we can use pkg-config to get at cecil.
* InlineStaticInit kind of sucks.
* Add a few more fxcop rules.
* Add a few more gendarme rules.
* IdenticalMethods isn't determinstic.
* Might want a rule to verify that gui resources are localized.
* RandomUsedOnce
	/Users/jessejones/New_Files/mono-1.9/mcs/class/System.Web/System.Web/HttpRequest.cs:669
	- loop detection falls down for do/while
* PInvoke entry points should exist
* http://groups.google.com/group/gendarme/web/rules
* Implement more FxCop rules:
	- Globalization Warnings
		Specify CultureInfo, once find references works in visisect
		Specify IFormatProvider, once find references works in visisect
	- Maintainability Warnings
	- Naming Warnings
* Try YourKit Profiler
	http://www.theserverside.net/news/thread.tss?thread_id=48141
* Foreign key but no update rule.
* Re-add MethodCanBeMadeStaticRule but disable it by default.
* Watchdog timeout should be configurable.
* Try profiling on linux.
* (SerializationInfo, StreamingContext) ctor and GetObjectData, but not ISerializable.
* Handle the CompilerGenerated types and methods in the dispatcher not the rules. This is tricky to
  do: we want to do stuff like visting the body of anonymous methods to see what they call for example.
* AssemblyResolver.Resolver.Resolve can be used to get a definition from a reference.
  a list of violations without messing with System.Process or external files.
* FinalizerUsesFinalizeableRule
	- would need to do some code flow based on the disposing flag
* Try heapbuddy.
* Probably want the fxcop override changes argument name rule
	- important for languages like VB (and ruby?) that support named arguments
* Need install.bat and uninstall.bat
* Might want to support getting custom assembly paths from an environment variable.
* Add an optional severity level:
	- disabled by default
	- will need a way to enable these (or override profiles/cmd line) from config file
	- can enable em via style or personal profile
	- be sure to list the optional rules in some place like config
	- make sure text and html reports both handle optional rules correctly.
* Optional rules:
	- old StaticMethod
	- some of the crappier FxCop rules (like no out parameters)
* SealPublicRule
	- no new protected members
	- no new virtual methods
	- class is public but not sealed
	- optional severity? or base class must be Object?
* Use Cecil to get file and line number:
	- write some unit tests
	- SequencePoint is the key class (but it's always null with the 1.9 cecil)
	- see if it works with a pdb file
	- see if we can drop the Mono.CompilerServices.SymbolWriter.dll dependency
* Look at C# 3.0:
	- extension methods
			public static class Extensions 
			{ 
				public static int ToInt32(this string s) 
				{ 
					return Int32.Parse(s); 
				}
			}
			could add Push, Pop, Front, and Back to List<>
	- automatically generated properties, no manual writing of getters and setters
			public string Name {get; set;}
	- implicitly typed arrays
			var a = new[] { 1, 10, 100, 1000 };    // int[]
	- implicitly typed local variables
			var orders = new Dictionary<int,Order>();
			foreach (var n in numbers) Console.WriteLine(n);
	- lambda expressions, this will make DoubleDisatch::Register nicer (once type inference is in)?
			x => x + 1       // Implicitly typed, expression body
			x => { return x + 1; }   // Implicitly typed, statement body
			(int x) => x + 1     // Explicitly typed, expression body
	- null coalescing operator
  		string fileName = tempFileName ?? "Untitled"
* Add a rejected file. Mention possibility of a (disabled by default) nitpicky level.
* Add a script to update doc comments with DBC info (including invariants).
* Could use threading to improve performance on multi-processors.
* Create table but no primary key.
* Need to work with pdb files
	- Mono.CompilerServices does not work with pdb files
	- gendarme has a Symbols class which is supposed to work with .net
	/Users/jessejones/New_Files/CustomFXCopRules_VS2003/bin/Debug/CustomFXCopRules_VS2003.pdb
	/Users/jessejones/New_Files/log4net-1.2.10/bin/net/2.0/debug/log4net.pdb
	/Users/jessejones/Source/Old Stuff/cocoV4/coco/protocol/modules/Configurator/ConfigUtils/XP/bin/Debug/ConfigUtils.pdb
* If --html is specified colorize example code. Should also support wiki formatting...
  already using * for bulleted lists.
* Would be nice if we smoked the xml.
* as not followed by a null check (null deref should catch this). What about asserts?
* Add some more profiles:
	- "public API review" profile, a "bug review" profile, a "full analysis review" profile?
	- moonlight?
* Framework needs to be in its own assembly so that it can be separately
  versioned (so custom rules don't have to be recompiled if core changes),
* NonLocalizedException
	- allow rule to be disabled on the exception type?
* Using stuff like demand FileIOPermission from non-system code
	- don't need to do this if you're just calling into the system libs
	- http://msdn2.microsoft.com/en-us/library/9kc0c6st(VS.80).aspx
	- make this informational
* Assembly description should include an overall version number.
* Review all the rules. Look for stuff like a rule that can also be done on private types.
* Equals is called with a null argument.
* A method that throws an exception on a null argument is called with null:
	- could do this with a --inter-procedural option
	- or cache null methods for assembly strong names
	- or do a prepass on the system assemblies and hope they dont change much
* UnimplementedRule
	- call to a method which throws NotImplementedException
* http://semmle.com/documentation/
* ObsoleteRule
	- code calls an obsolete method
* Unbounded collection add 
	- list/dict, later hashset
	- check for adds in non-ctors
	- check for remove, clear, store field
	- be sure to check 3.5 methods
* There are cyclic assembly references (transitive).
* Can we make use of extra type or spec info? For example units.
* Public dispose + threads
	- http://blogs.msdn.com/cbrumme/archive/2003/04/19/51365.aspx
* http://msdn2.microsoft.com/en-us/library/ms182293(VS.80).aspx
* If file/line can't be shown then show offset instead.
* VisitEnd methods should null fields or clear collections.
* Would be nice if ftest worked in release.
* MarshalStringsInPInvokeDeclarationsRule
* UseManagedAlternativesToPInvokeRule
	- might want to do a google code search for p/invoke
* Call GetLastError immediately after P/Invoke
* A temporary is modified but not used
	- the local is overwritten or not used after the method call
	- probably need to check the method body for a store
	- can do this lazily and cache result for reasonable efficiency
* Not implemented
		  Avoid excessive parameters on generic types
		  Avoid namespaces with few types
		  Avoid out parameters
		  Default parameters should not be used
		  Do not catch general exception types (we do warn if this is done with an empty catch block)
		  Do not declare protected members in sealed types (compiler warns (at level 4))
		  Do not declare static members on generic types
		  Do not declare virtual members in sealed types (compiler catches)
		  Do not expose generic lists
		  Do not nest generic types in member signatures
		  Do not overload operator equals on reference types
		  Do not pass types by reference
		  Enum Storage should be Int32
		  Generic methods should provide type parameter
		  Indexers should not be multidimensional
		  Interface methods should be callable by child types
		  Members should not expose certain concrete types
		  Override operator equals on overloading add and subtract
		  Properties should not be write only
		  Replace repetitive arguments with params array
		  String uri overloads call system uri overloads
		  Uri parameters should not be strings
		  Uri properties should not be strings
		  Uri return values should not be strings
		  Use events where appropriate
		  Use generics where appropriate
		  Use integral or string argument for indexers
		  Use properties where appropriate
		  Do not hardcode locale specific strings
		  most of the Interoperability rules
		  mobility warnings
		  Identifiers should not match keywords
		  Review unused parameters
		  Use managed equivalents of win
		  Secure Serialization Constructors
		  Specify marshaling for pinvoke string arguments
* TextReport isn't localizable.
* Get the FXCop rules working.
	<http://msdn2.microsoft.com/en-us/library/ee1hzekz(VS.80).aspx>
* Possible new rules:
	- http://mono-soc-2007.googlecode.com/svn/trunk/lukasz/
	- http://mono-soc-2007.googlecode.com/svn/trunk/nestor/
	- http://mono-soc-2007.googlecode.com/svn/trunk/nidhi/rules/
	- http://msdn.microsoft.com/msdnmag/issues/04/09/Bugslayer/
	- <http://msdn2.microsoft.com/en-us/library/ee1hzekz(VS.80).aspx>
	- names diff by case, property with same name as result type, maybe these should be nitpicky level
	- IFormattable.ToString that doesn't call ICustomFormatter.Format
	- switch (or if) covers all enum values w/o a default
	- no classes with only nested types
	- deadcode nitpick (use callgraph)
	- deadlock? (use callgraph), erasor algorithm
	- publicly visible const field (breaking change if it's changed)?
	- prefer no null events? http://blogs.msdn.com/jaybaz_ms/archive/2004/09/16/230681.aspx
	- all classes are public and there are more than five classes
	- argument isn't used
* Bogus Gendarme rules:
	- DoubleCheckLockingRule, just use a singleton class
	  maybe we can have a rule for custom singleton class?
	
* Release checklist:
	- remove ignoreList setting
	- search for TODO
	- use mono --debug bin/smokey.exe.exe -check-xml>tmp.txt
	- make smoke>tmp.txt
	- make check
	- make fcheck
	- make RELEASE=1 smoke>tmp.txt
	- make RELEASE=1 check
	- make RELEASE=1 fcheck
	- profile
		rm bin/smokey.exe				# nant doesn't rebuild if just a define changed
		nant -D:profile=true app
		look at stdout
	- review severity and breaking of new rules
	- make sure custom lib builds
	- make sure custom test smokes
	- make sure custom test runs
	- try on .net (smoke fxcop)
	- smoke /Users/jessejones/New_Files/Reflector\ Folder/Reflector.exe
	- smoke a mono assembly, eg mscorlib.dll
	- smoke a mono assembly with -profile=system and see if any additional rules should be disabled
	- make sure everything is checked in
	- use svn log -r 1:HEAD > CHANGE_LOG
	- update CHANGES file
	- update version number in the make file and zap build_num
	- install
	- update README and wiki
	- mono --debug bin/smokey.exe -generate-html-violations:violations
	- smoke -profile=system -html -out:report.html /Users/jessejones/New_Files/mono-1.9/mcs/class/lib/default/System.Drawing.dll
		don't use custom.dll
	- update SmokeyVersion on old web site
	- upload
		report.html
		violations
		smokey_bin
		smokey_src
		latest cecil
	- send an announcement
	- make sure everything is checked in
	- do the following (be sure to fix the versions):
		svn copy file:///Users/jessejones/projects/Smokey file:///Users/jessejones/projects/releases/smokey-1.X.0.0 -m "Tagging 1.X.0.0"
	
* Write a xxx rule:	
	- update the xml
	- add a rule which always return success
	- update the config file
	- add a test
	- implement the rule
	- update functional test 

./configure --prefix=/Library/Frameworks/Mono.framework/Versions/1.2.5 
sudo make install
ln -s 1.2.5 Current



Opcode			Operand Type
Call			MethodReference
Callvirt		MethodReference
Castclass		TypeDefinition or TypeReference
Isinst			TypeDefinition or GenericInstanceType 
Ldarg			int
Ldloc			int or VariableDefinition
Ldloca			VariableDefinition
Ldarga			ParameterDefinition 
Newobj			MethodReference
Switch			Instruction[]
Unbox			TypeDefinition or TypeReference

